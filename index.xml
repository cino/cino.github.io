<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Home on Cino</title><link>https://cino.io/</link><description>Recent content in Home on Cino</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sun, 28 Sep 2025 18:01:00 +0100</lastBuildDate><atom:link href="https://cino.io/index.xml" rel="self" type="application/rss+xml"/><item><title>InvalidSignature in Node with AWS SDK</title><link>https://cino.io/2025/invalidsignature-aws-sdk-nodejs/</link><pubDate>Sun, 28 Sep 2025 18:01:00 +0100</pubDate><guid>https://cino.io/2025/invalidsignature-aws-sdk-nodejs/</guid><description>&lt;p&gt;Sometimes you run into a weird issue that is hard to debug. This was one of those times. I was working on a Lambda function that was supposed to retrieve a secret from AWS Secrets Manager. However, I kept getting random &lt;code&gt;InvalidSignatureException&lt;/code&gt; errors in production.&lt;/p&gt;</description></item><item><title>Testing in a serverless environment</title><link>https://cino.io/2025/testing-in-serverless-environment/</link><pubDate>Fri, 22 Aug 2025 14:01:00 +0100</pubDate><guid>https://cino.io/2025/testing-in-serverless-environment/</guid><description>&lt;p&gt;Working in a pure serverless environment presents a distinct set of challenges when testing your software, particularly when multiple services interact with each other. In this post, I will explore some strategies for testing in a serverless environment.&lt;/p&gt;</description></item><item><title>DynamoDB Streams with more than 24 hour retention</title><link>https://cino.io/2025/dynamodb-streams-with-more-than-24-hour-retention/</link><pubDate>Tue, 24 Jun 2025 19:00:00 +0100</pubDate><guid>https://cino.io/2025/dynamodb-streams-with-more-than-24-hour-retention/</guid><description>&lt;p&gt;That was kind of a misleading title, but I wanted to get your attention. The truth is that DynamoDB Streams have a maximum retention period of 24 hours and there is no way to extend that. When you do need more than 24 hours the default solution is to use Kinesis Data Streams, which can retain data for up to &lt;a href="https://docs.aws.amazon.com/streams/latest/dev/kinesis-extended-retention.html"&gt;365 days&lt;/a&gt;. While it would be easy to just move to Kinesis, this comes with extra cost which may not be justified for all use cases.&lt;/p&gt;</description></item><item><title>Private AppSync with custom dns</title><link>https://cino.io/2025/private-appsync-with-custom-dns/</link><pubDate>Fri, 06 Jun 2025 18:00:00 +0100</pubDate><guid>https://cino.io/2025/private-appsync-with-custom-dns/</guid><description>&lt;p&gt;In the last year I&amp;rsquo;ve been working a &lt;strong&gt;lot&lt;/strong&gt; with AppSync and I have to say it didn&amp;rsquo;t come without challenges. One of the biggest challenges was to create a private AppSync API with a custom domain. This is something that is not natively supported by AWS, but it is possible to achieve it using a combination of services.&lt;/p&gt;
&lt;p&gt;While this is now possible for API Gateway, AppSync is a different beast. There is no native way to create a private AppSync API with a private custom domain. This is something that I had to figure out the hard way, and I want to share my findings with you.&lt;/p&gt;
&lt;p&gt;This might become a bit of a long read, but if you are looking for a way to create a private AppSync API with a custom domain, you are in the right place. I will try to explain the steps I took to achieve this and the challenges I faced along the way.&lt;/p&gt;</description></item><item><title>Modifying DynamoDB TTL with CDK</title><link>https://cino.io/2025/modifying-dynamodb-ttl-with-cdk/</link><pubDate>Sat, 22 Mar 2025 12:00:40 +0100</pubDate><guid>https://cino.io/2025/modifying-dynamodb-ttl-with-cdk/</guid><description>&lt;p&gt;Ever tried to update the TTL attribute of a DynamoDB table using the AWS CDK and got a &lt;code&gt;InvalidRequest&lt;/code&gt; in CDK or a &lt;code&gt;ValidationException&lt;/code&gt; via the CLI? I did, and it took me a while to figure out why. In this post, I&amp;rsquo;ll explain what happened and how to avoid the same issue in the future. This is a short post, but I think it&amp;rsquo;s worth sharing because it can save you some time and frustration.&lt;/p&gt;</description></item><item><title>Using AWS VPC Endpoints</title><link>https://cino.io/2025/using-vpc-endpoints/</link><pubDate>Fri, 14 Mar 2025 12:00:40 +0100</pubDate><guid>https://cino.io/2025/using-vpc-endpoints/</guid><description>&lt;p&gt;After posting about Private API Gateway&amp;rsquo;s with DNS I received the suggestion by &lt;a href="https://www.linkedin.com/in/lee-james-gilmore/"&gt;Lee Gilmore&lt;/a&gt; to elaborate on VPC Endpoints. In this article, I will show you how to use VPC Endpoints to access AWS services without the need to go through the internet.&lt;/p&gt;</description></item><item><title>Always set AWS CDK Defaults</title><link>https://cino.io/2024/always-set-aws-cdk-defaults/</link><pubDate>Mon, 25 Nov 2024 00:00:00 +0000</pubDate><guid>https://cino.io/2024/always-set-aws-cdk-defaults/</guid><description>&lt;p&gt;We are nearing the end of the year, the time to reflect on the past year and definitely share the things that went &amp;ldquo;wrong&amp;rdquo; or in this case the things that could have been done better. This is one of those things that I wish I knew earlier, and I hope it helps you too.&lt;/p&gt;</description></item><item><title>Private API Gateway with DNS</title><link>https://cino.io/2024/private-api-gateway-with-dns/</link><pubDate>Sun, 17 Nov 2024 00:00:00 +0000</pubDate><guid>https://cino.io/2024/private-api-gateway-with-dns/</guid><description>&lt;p&gt;&lt;strong&gt;UPDATE:&lt;/strong&gt; Ofcourse, after I finalized this article Amazon released native support for &lt;a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-private-custom-domains.html"&gt;Private DNS on API Gateways.
&lt;/a&gt;. Announced on the &lt;a href="https://aws.amazon.com/blogs/compute/implementing-custom-domain-names-for-private-endpoints-with-amazon-api-gateway/"&gt;AWS Blog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At PostNL we are building most of our applications with &lt;a href="https://medium.com/postnl-engineering/business-overview-f7c8d8ebee2c"&gt;Serverless&lt;/a&gt; in mind, let me rephrase that, we build all our applications within our own landing zone with Serverless only. There is no option to deploy any kind of EC2 and if you need containers you&amp;rsquo;d be running them on Fargate only.&lt;/p&gt;</description></item><item><title>AWS CloudShell in your own vpc</title><link>https://cino.io/2024/aws-cloudshell-in-your-own-vpc/</link><pubDate>Tue, 12 Nov 2024 00:00:00 +0000</pubDate><guid>https://cino.io/2024/aws-cloudshell-in-your-own-vpc/</guid><description>&lt;p&gt;Until recently, I was completely unaware of &lt;a href="https://aws.amazon.com/cloudshell/"&gt;AWS CloudShell&lt;/a&gt;, and I&amp;rsquo;m glad I finally decided to give it a try. CloudShell provides a shell environment right in your browser, and to my surprise, you can start an instance within your own VPC!&lt;/p&gt;</description></item><item><title>Avoiding CloudFormation Stack Outputs</title><link>https://cino.io/2024/avoid-cloudformation-stack-outputs/</link><pubDate>Mon, 11 Nov 2024 00:00:00 +0000</pubDate><guid>https://cino.io/2024/avoid-cloudformation-stack-outputs/</guid><description>&lt;p&gt;Recently I&amp;rsquo;ve been working on a new project where we created many resources in a lot of different stacks. A feature of CloudFormation is that you can output values from your stack, which is great for referencing resources in other stacks. However, while there is a use-case for this, I&amp;rsquo;ve found that it&amp;rsquo;s better to avoid using these outputs and instead use SSM parameters.&lt;/p&gt;</description></item><item><title>Multiple ways to retrieve SSM parameters in AWS CDK</title><link>https://cino.io/2024/multiple-ways-to-retrieve-ssm-parameters-cdk/</link><pubDate>Sun, 10 Nov 2024 00:00:00 +0000</pubDate><guid>https://cino.io/2024/multiple-ways-to-retrieve-ssm-parameters-cdk/</guid><description>&lt;p&gt;When working with AWS CDK and using SSM Parameters to store information in between stacks there are multiple ways to retrieve the value, with both advantages and disadvantages. In this post, I&amp;rsquo;ll go over the different ways to retrieve SSM parameters in AWS CDK and when to use them.&lt;/p&gt;</description></item><item><title>AWS Parameter Store vs AWS Secrets</title><link>https://cino.io/2023/aws-parameter-store-vs-aws-secrets/</link><pubDate>Wed, 19 Jul 2023 00:00:00 +0000</pubDate><guid>https://cino.io/2023/aws-parameter-store-vs-aws-secrets/</guid><description>&lt;p&gt;Recently I&amp;rsquo;ve been using AWS Secrets to retrieve API keys which are needed to access external API&amp;rsquo;s, however, this turned out to be a more expensive service than we initially thought when starting.&lt;/p&gt;</description></item><item><title>Using password(les)s in 2023</title><link>https://cino.io/2023/using-passwords-in-2023/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://cino.io/2023/using-passwords-in-2023/</guid><description>&lt;p&gt;It&amp;rsquo;s been almost a year since I&amp;rsquo;ve started using my YubiKey, even though I only recently bought a backup key (yes, you can shame me) I decided it is time to have big write up on why you should be using a hardware key with Fido2(WebAuthn) support too.&lt;/p&gt;</description></item><item><title>AWS Learning badge assignments</title><link>https://cino.io/2023/aws-learning-badge-assignments/</link><pubDate>Fri, 10 Feb 2023 00:00:00 +0000</pubDate><guid>https://cino.io/2023/aws-learning-badge-assignments/</guid><description>&lt;p&gt;Besides the AWS Certification program, there are also the newer AWS Learning skill badges. A new-ish way of learning the skills necessary to work on the aws platform and illustrate your knowledge. These are like the certifications except they are &lt;strong&gt;not&lt;/strong&gt; certifications of some kind and you can take exams to receive the &amp;ldquo;Skill badge&amp;rdquo;, this is all for free and is here to help you. I finished them all and wanted to highlight each of them, and how I experienced each of the exams.&lt;/p&gt;</description></item><item><title>Every repository should contain a DevContainer</title><link>https://cino.io/2023/every-repository-should-contain-a-devcontainer/</link><pubDate>Thu, 09 Feb 2023 00:00:00 +0000</pubDate><guid>https://cino.io/2023/every-repository-should-contain-a-devcontainer/</guid><description>&lt;p&gt;Almost a year ago I visited an AWS User Group (Amsterdam) meetup where someone gave a presentation on using Microsoft &lt;a href="https://code.visualstudio.com/docs/devcontainers/containers"&gt;Dev Containers&lt;/a&gt; in your projects. Even though I tried it before, this gave me the momentum to actually commit to it and have never looked back. And I want you to do the same.&lt;/p&gt;</description></item><item><title>Limiting AWS Lambda's access to Log Groups</title><link>https://cino.io/2022/limiting-aws-lambdas-access-to-log-groups/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://cino.io/2022/limiting-aws-lambdas-access-to-log-groups/</guid><description>&lt;p&gt;About a year ago I asked the question on &lt;a href="https://www.reddit.com/r/aws/comments/o3fbge/is_awslambdabasicexecutionrole_not_way_too_open/" target="_blank"&gt;Reddit&lt;/a&gt; what people thought of the default Lambda role called &amp;ldquo;AWSLambdaBasicExecutionRole&amp;rdquo; and why I thought it was way too open to be a default.&lt;/p&gt;
&lt;p&gt;To this day I still think this role shouldn&amp;rsquo;t be used at all, but rather be deleted by Amazon itself. While I agree that Amazon wants people to get started as quickly as possible it is not in line with the least access principle. For this reason, I always define the role myself, for starters only allowing the Lambda function to write to its own CloudWatch Log Group. There is no reason for the Lambda function to be able to write to log groups of other services rather than its own.&lt;/p&gt;</description></item><item><title>Building a Serverless Kanban Board</title><link>https://cino.io/2022/building-a-serverless-kanban-board/</link><pubDate>Mon, 18 Apr 2022 00:00:00 +0000</pubDate><guid>https://cino.io/2022/building-a-serverless-kanban-board/</guid><description>&lt;p&gt;&lt;strong&gt;Update 18/01/2023: Let&amp;rsquo;s assume this is not gonna happen anymore&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As the title suggests I&amp;rsquo;m planning on building a Serverless Kanban Board to improve my personal Typescript skills in both the front and back end. Furthermore, the whole project will be set up while using Amazon Web Services (of course 😉)&lt;/p&gt;
&lt;p&gt;I thought it would be fun to build something for practice and also have some personal projects on my GitHub page that display the latest techniques I&amp;rsquo;m working with and as a bonus get some material I can write about on the website!&lt;/p&gt;</description></item><item><title>TIL #1 - You can override basically anything in AWS CDK</title><link>https://cino.io/2022/you-can-override-basically-anything-in-aws-cdk/</link><pubDate>Sun, 03 Apr 2022 00:00:00 +0000</pubDate><guid>https://cino.io/2022/you-can-override-basically-anything-in-aws-cdk/</guid><description>&lt;p&gt;Unique as I am I decided to start writing short blog posts about recent discoveries that suddenly clicked inside my head. For the first one; I have been working a lot with AWS CDK recently and decided that I wanted to contribute back to the AWS-CDK source code.&lt;/p&gt;</description></item><item><title>Temporarily working on a Windows Laptop</title><link>https://cino.io/2022/temporarily-working-on-a-windows-laptop/</link><pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate><guid>https://cino.io/2022/temporarily-working-on-a-windows-laptop/</guid><description>&lt;p&gt;This has been quite the struggle, for the last 6 years, I&amp;rsquo;ve been working on a Macbook Pro/Air (m1) and right now I&amp;rsquo;m not able to do so. Due to a recent job change, I&amp;rsquo;m working on a Windows laptop until the new Macbook is in. At first, I was really curious to work on Windows again! I&amp;rsquo;ve been talking Microsoft up anytime I spoke with somebody about the company, the recent acquiries, the change in direction, I really like where the company is going.&lt;/p&gt;</description></item><item><title>Deploying your static website with a Github Action</title><link>https://cino.io/2022/deploying-your-static-website/</link><pubDate>Fri, 18 Feb 2022 00:00:00 +0000</pubDate><guid>https://cino.io/2022/deploying-your-static-website/</guid><description>&lt;p&gt;Authenticate GitHub with OpenID Connect to deploy your CDK project to your AWS Organization&lt;/p&gt;
&lt;p&gt;After making an AWS CDK project one of the first thing you will realize is that you don&amp;rsquo;t want to keep running cdk deploy to update your production environment. This is a fine way of working when you modify your personal dev environment as it is a quick way of deploying but definitely not for your staging/production environments.&lt;/p&gt;</description></item><item><title>Static website distribution with AWS CloudFront</title><link>https://cino.io/2022/static-website-distribution-with-aws-cloudfront/</link><pubDate>Fri, 11 Feb 2022 00:00:00 +0000</pubDate><guid>https://cino.io/2022/static-website-distribution-with-aws-cloudfront/</guid><description>&lt;p&gt;Having only written about PHP and Servers in the past I am making the switch to Serverless. This has been a long-time wish for me and finally realized this in a personal but also professional environment. That being said, I plan on writing a lot of new content on the blog purely around setting up applications with a serverless mindset, built with AWS CDK (AWS Cloud Development Kit). I will include diagrams and/or flowcharts to explain what is happening and of course, include the source code in a public GitHub repository.&lt;/p&gt;
&lt;p&gt;The bigger goal for me is to develop a proper application on nothing but serverless services from Amazon to train my skillset and also share the process that I went through.&lt;/p&gt;</description></item><item><title>Optimizing PHP-FPM</title><link>https://cino.io/2019/optimizing-php-fpm/</link><pubDate>Thu, 25 Apr 2019 00:00:00 +0000</pubDate><guid>https://cino.io/2019/optimizing-php-fpm/</guid><description>&lt;p&gt;As mentioned in the previous post about &lt;a href="https://cino.io/2019/laravel-forge-setting-it-up-the-right-way/" target="_blank"&gt;laravel forge and setting it up the right way&lt;/a&gt; there was going to be a separate post just about PHP-FPM and how to configure it correctly.&lt;/p&gt;</description></item><item><title>Laravel Forge: setting it up the right way</title><link>https://cino.io/2019/laravel-forge-setting-it-up-the-right-way/</link><pubDate>Sat, 20 Apr 2019 00:00:00 +0000</pubDate><guid>https://cino.io/2019/laravel-forge-setting-it-up-the-right-way/</guid><description>&lt;p&gt;For the last couple of years, I’ve been creating servers with Laravel Forge and normally I would advise against doing this (In favor of running containers or other load balanced tasks), but for the sake of giving advice to those who do want to do it, this is the first post I’ll spend time on it.&lt;/p&gt;
&lt;p&gt;For the record, I’ll be writing from an AWS perspective since this is the only provider I have extensive experience with on Laravel Forge but I’ll expect the others to work quite the same.&lt;/p&gt;</description></item><item><title>First post again</title><link>https://cino.io/2019/first-post-again/</link><pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate><guid>https://cino.io/2019/first-post-again/</guid><description>&lt;p&gt;Ah, we are back! Once again, this will be the third try of starting and actually updating a personal blog. I’m not exactly sure what I wrote down the last time but I’m planning the same.&lt;/p&gt;</description></item></channel></rss>